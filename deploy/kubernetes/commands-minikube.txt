minikube start --cpus 4 --memory 8192

minikube ssh
sudo sysctl -w vm.max_map_count=262144

minikube docker-env | Invoke-Expression

kubectl create -f deploy/kubernetes/manifests-logging

kubectl create -f deploy/kubernetes/rideshare-ns.yaml -f deploy/kubernetes/manifests
#kubectl create -f deploy/kubernetes/manifests

kubectl get pods --namespace="rideshare"


kubectl delete -f deploy/kubernetes/manifests



# Create Docker images
docker build --tag aista/front-end ../front-end/
docker build --tag aista/user-service ../authentication-service/
docker build --tag aista/gmaps-adapter ../gmaps-adapter/
docker build --tag aista/edge-service ../edge-service/
docker build --tag aista/notification-service C:\Users\Juan\go\src\github.com\AITestingOrg\notification-service\
docker build --tag aista/calculation-service C:\Users\Juan\go\src\github.com\AITestingOrg\calculation-service\


kubectl create -f deploy/kubernetes/manifests/notificationservice-dep.yaml
kubectl create -f deploy/kubernetes/manifests/front-end-dep.yaml

kubectl apply -f deploy/kubernetes/manifest


kubectl get svc --namespace=rideshare -o wide

kubectl delete -f deploy/kubernetes/manifests/userservice-dep.yaml
kubectl create -f deploy/kubernetes/manifests/userservice-dep.yaml

kubectl delete -f deploy/kubernetes/manifests/front-end-dep.yaml
kubectl create -f deploy/kubernetes/manifests/front-end-dep.yaml


kubectl create -f deploy/kubernetes/manifests/mysqlserver-dep.yaml
kubectl create -f deploy/kubernetes/manifests/mongo-dep.yaml
kubectl create -f deploy/kubernetes/manifests/rabbitmq-dep.yaml
kubectl create -f deploy/kubernetes/manifests/discovery-dep.yaml

kubectl create -f deploy/kubernetes/manifests/front-end-dep.yaml
kubectl create -f deploy/kubernetes/manifests/edgeservice-dep.yaml
kubectl create -f deploy/kubernetes/manifests/userservice-dep.yaml
kubectl create -f deploy/kubernetes/manifests/notificationservice-dep.yaml
kubectl create -f deploy/kubernetes/manifests/calculationservice-dep.yaml
kubectl create -f deploy/kubernetes/manifests/gmapsadapter-dep.yaml


kubectl expose deployment mysqlserver --type=NodePort

# Create new context for rideshare
kubectl config set-context rideshare --namespace=rideshare --cluster=minikube --user=minikube 

kubectl config current-context           # Display the current-context
kubectl config use-context rideshare     # set the default context to my-cluster-name




##########################################
# BASIC KUBECTL COMMANDS
##########################################

kubectl get pods
kubectl get pods [pod name]
 
kubectl expose <type name> <identifier/name> [—port=external port] [—target-port=container-port [—type=service-type]
kubectl expose deployment tomcat-deployment --type=NodePort
 
kubectl port-forward <pod name> [LOCAL_PORT:]REMOTE_PORT]
 
kubectl attach <pod name> -c <container>
 
kubectl exec  [-it] <pod name> [-c CONTAINER] — COMMAND [args…]
kubectl exec -it <pod name> bash
 
kubectl label [—overwrite] <type> KEY_1=VAL_1 ….
kubectl label pods <pod name> healthy=fasle
 
kubectl run <name> —image=image
kubectl run hazelcast --image=hazelcast/hazelcast --port=5701
# the hazelcast docker image has been moved to hazelcast/hazelcast (https://hub.docker.com/r/hazelcast/hazelcast
 
kubectl describe pod


kubectl scale --replicas=4 deployment/tomcat-deployment 
 
kubectl expose deployment tomcat-deployment --type=NodePort
kubectl expose deployment tomcat-deployment --type=LoadBalancer --port=8080 --target-port=8080 --name tomcat-load-balancer
 
kubectl describe services tomcat-load-balancer

##########################################